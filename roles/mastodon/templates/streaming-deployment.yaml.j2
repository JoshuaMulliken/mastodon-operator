kind: Deployment
apiVersion: apps/v1
metadata:
  name: '{{ ansible_operator_meta.name }}-mastodon-streaming'
  namespace: '{{ ansible_operator_meta.namespace }}'
spec:
  replicas: {{ streaming_replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: mastodon
      app.kubernetes.io/instance: '{{ ansible_operator_meta.name }}'
      app.kubernetes.io/part-of: mastodon-operator
      app.kubernetes.io/managed-by: kustomize
      app.kubernetes.io/created-by: mastodon-operator
      app.kubernetes.io/component: streaming
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mastodon
        app.kubernetes.io/instance: '{{ ansible_operator_meta.name }}'
        app.kubernetes.io/part-of: mastodon-operator
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/created-by: mastodon-operator
        app.kubernetes.io/component: streaming
    spec:
      containers:
        - name: mastodon-streaming
          image: '{{ image }}'
          imagePullPolicy: Always
          command:
            - node
            - ./streaming
          ports:
            - containerPort: 4000
              name: streaming
              protocol: TCP
          envFrom:
            - configMapRef:
                name: '{{ ansible_operator_meta.name }}-mastodon-config'
            - secretRef:
                name: '{{ ansible_operator_meta.name }}-mastodon-secret'
          livenessProbe:
            httpGet:
              path: /api/v1/streaming/health
              port: streaming
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v1/streaming/health
              port: streaming
            initialDelaySeconds: 5
            periodSeconds: 10